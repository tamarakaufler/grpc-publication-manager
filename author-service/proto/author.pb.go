// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/author.proto

package publication_management_author

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Author struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	FirstName            string   `protobuf:"bytes,2,opt,name=first_name,json=firstName" json:"first_name,omitempty"`
	LastName             string   `protobuf:"bytes,3,opt,name=last_name,json=lastName" json:"last_name,omitempty"`
	Address              string   `protobuf:"bytes,4,opt,name=address" json:"address,omitempty"`
	Country              string   `protobuf:"bytes,5,opt,name=country" json:"country,omitempty"`
	Email                string   `protobuf:"bytes,6,opt,name=email" json:"email,omitempty"`
	Password             string   `protobuf:"bytes,7,opt,name=password" json:"password,omitempty"`
	Token                string   `protobuf:"bytes,8,opt,name=token" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Author) Reset()         { *m = Author{} }
func (m *Author) String() string { return proto.CompactTextString(m) }
func (*Author) ProtoMessage()    {}
func (*Author) Descriptor() ([]byte, []int) {
	return fileDescriptor_author_a6d61f4ff1ae4ce3, []int{0}
}
func (m *Author) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Author.Unmarshal(m, b)
}
func (m *Author) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Author.Marshal(b, m, deterministic)
}
func (dst *Author) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Author.Merge(dst, src)
}
func (m *Author) XXX_Size() int {
	return xxx_messageInfo_Author.Size(m)
}
func (m *Author) XXX_DiscardUnknown() {
	xxx_messageInfo_Author.DiscardUnknown(m)
}

var xxx_messageInfo_Author proto.InternalMessageInfo

func (m *Author) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Author) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *Author) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *Author) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *Author) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *Author) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *Author) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *Author) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type Token struct {
	Token                string   `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
	Valid                bool     `protobuf:"varint,2,opt,name=valid" json:"valid,omitempty"`
	Errors               []*Error `protobuf:"bytes,3,rep,name=errors" json:"errors,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Token) Reset()         { *m = Token{} }
func (m *Token) String() string { return proto.CompactTextString(m) }
func (*Token) ProtoMessage()    {}
func (*Token) Descriptor() ([]byte, []int) {
	return fileDescriptor_author_a6d61f4ff1ae4ce3, []int{1}
}
func (m *Token) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Token.Unmarshal(m, b)
}
func (m *Token) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Token.Marshal(b, m, deterministic)
}
func (dst *Token) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Token.Merge(dst, src)
}
func (m *Token) XXX_Size() int {
	return xxx_messageInfo_Token.Size(m)
}
func (m *Token) XXX_DiscardUnknown() {
	xxx_messageInfo_Token.DiscardUnknown(m)
}

var xxx_messageInfo_Token proto.InternalMessageInfo

func (m *Token) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *Token) GetValid() bool {
	if m != nil {
		return m.Valid
	}
	return false
}

func (m *Token) GetErrors() []*Error {
	if m != nil {
		return m.Errors
	}
	return nil
}

type EmptyResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EmptyResponse) Reset()         { *m = EmptyResponse{} }
func (m *EmptyResponse) String() string { return proto.CompactTextString(m) }
func (*EmptyResponse) ProtoMessage()    {}
func (*EmptyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_author_a6d61f4ff1ae4ce3, []int{2}
}
func (m *EmptyResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmptyResponse.Unmarshal(m, b)
}
func (m *EmptyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmptyResponse.Marshal(b, m, deterministic)
}
func (dst *EmptyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmptyResponse.Merge(dst, src)
}
func (m *EmptyResponse) XXX_Size() int {
	return xxx_messageInfo_EmptyResponse.Size(m)
}
func (m *EmptyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_EmptyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_EmptyResponse proto.InternalMessageInfo

type GetAllRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAllRequest) Reset()         { *m = GetAllRequest{} }
func (m *GetAllRequest) String() string { return proto.CompactTextString(m) }
func (*GetAllRequest) ProtoMessage()    {}
func (*GetAllRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_author_a6d61f4ff1ae4ce3, []int{3}
}
func (m *GetAllRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAllRequest.Unmarshal(m, b)
}
func (m *GetAllRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAllRequest.Marshal(b, m, deterministic)
}
func (dst *GetAllRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAllRequest.Merge(dst, src)
}
func (m *GetAllRequest) XXX_Size() int {
	return xxx_messageInfo_GetAllRequest.Size(m)
}
func (m *GetAllRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAllRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetAllRequest proto.InternalMessageInfo

type Response struct {
	Created              bool      `protobuf:"varint,1,opt,name=created" json:"created,omitempty"`
	Author               *Author   `protobuf:"bytes,2,opt,name=author" json:"author,omitempty"`
	Authors              []*Author `protobuf:"bytes,3,rep,name=authors" json:"authors,omitempty"`
	Errors               []*Error  `protobuf:"bytes,4,rep,name=errors" json:"errors,omitempty"`
	Token                *Token    `protobuf:"bytes,5,opt,name=token" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_author_a6d61f4ff1ae4ce3, []int{4}
}
func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (dst *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(dst, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetCreated() bool {
	if m != nil {
		return m.Created
	}
	return false
}

func (m *Response) GetAuthor() *Author {
	if m != nil {
		return m.Author
	}
	return nil
}

func (m *Response) GetAuthors() []*Author {
	if m != nil {
		return m.Authors
	}
	return nil
}

func (m *Response) GetErrors() []*Error {
	if m != nil {
		return m.Errors
	}
	return nil
}

func (m *Response) GetToken() *Token {
	if m != nil {
		return m.Token
	}
	return nil
}

type Error struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Description          string   `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Error) Reset()         { *m = Error{} }
func (m *Error) String() string { return proto.CompactTextString(m) }
func (*Error) ProtoMessage()    {}
func (*Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_author_a6d61f4ff1ae4ce3, []int{5}
}
func (m *Error) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Error.Unmarshal(m, b)
}
func (m *Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Error.Marshal(b, m, deterministic)
}
func (dst *Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Error.Merge(dst, src)
}
func (m *Error) XXX_Size() int {
	return xxx_messageInfo_Error.Size(m)
}
func (m *Error) XXX_DiscardUnknown() {
	xxx_messageInfo_Error.DiscardUnknown(m)
}

var xxx_messageInfo_Error proto.InternalMessageInfo

func (m *Error) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *Error) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func init() {
	proto.RegisterType((*Author)(nil), "publication.management.author.Author")
	proto.RegisterType((*Token)(nil), "publication.management.author.Token")
	proto.RegisterType((*EmptyResponse)(nil), "publication.management.author.EmptyResponse")
	proto.RegisterType((*GetAllRequest)(nil), "publication.management.author.GetAllRequest")
	proto.RegisterType((*Response)(nil), "publication.management.author.Response")
	proto.RegisterType((*Error)(nil), "publication.management.author.Error")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AuthorServiceClient is the client API for AuthorService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AuthorServiceClient interface {
	CreateAuthor(ctx context.Context, in *Author, opts ...grpc.CallOption) (*EmptyResponse, error)
	GetAuthor(ctx context.Context, in *Author, opts ...grpc.CallOption) (*Response, error)
	GetAll(ctx context.Context, in *GetAllRequest, opts ...grpc.CallOption) (*Response, error)
	ValidateToken(ctx context.Context, in *Token, opts ...grpc.CallOption) (*Token, error)
	InvalidateToken(ctx context.Context, in *Author, opts ...grpc.CallOption) (*EmptyResponse, error)
	Authenticate(ctx context.Context, in *Author, opts ...grpc.CallOption) (*Token, error)
}

type authorServiceClient struct {
	cc *grpc.ClientConn
}

func NewAuthorServiceClient(cc *grpc.ClientConn) AuthorServiceClient {
	return &authorServiceClient{cc}
}

func (c *authorServiceClient) CreateAuthor(ctx context.Context, in *Author, opts ...grpc.CallOption) (*EmptyResponse, error) {
	out := new(EmptyResponse)
	err := c.cc.Invoke(ctx, "/publication.management.author.AuthorService/CreateAuthor", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authorServiceClient) GetAuthor(ctx context.Context, in *Author, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/publication.management.author.AuthorService/GetAuthor", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authorServiceClient) GetAll(ctx context.Context, in *GetAllRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/publication.management.author.AuthorService/GetAll", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authorServiceClient) ValidateToken(ctx context.Context, in *Token, opts ...grpc.CallOption) (*Token, error) {
	out := new(Token)
	err := c.cc.Invoke(ctx, "/publication.management.author.AuthorService/ValidateToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authorServiceClient) InvalidateToken(ctx context.Context, in *Author, opts ...grpc.CallOption) (*EmptyResponse, error) {
	out := new(EmptyResponse)
	err := c.cc.Invoke(ctx, "/publication.management.author.AuthorService/InvalidateToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authorServiceClient) Authenticate(ctx context.Context, in *Author, opts ...grpc.CallOption) (*Token, error) {
	out := new(Token)
	err := c.cc.Invoke(ctx, "/publication.management.author.AuthorService/Authenticate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for AuthorService service

type AuthorServiceServer interface {
	CreateAuthor(context.Context, *Author) (*EmptyResponse, error)
	GetAuthor(context.Context, *Author) (*Response, error)
	GetAll(context.Context, *GetAllRequest) (*Response, error)
	ValidateToken(context.Context, *Token) (*Token, error)
	InvalidateToken(context.Context, *Author) (*EmptyResponse, error)
	Authenticate(context.Context, *Author) (*Token, error)
}

func RegisterAuthorServiceServer(s *grpc.Server, srv AuthorServiceServer) {
	s.RegisterService(&_AuthorService_serviceDesc, srv)
}

func _AuthorService_CreateAuthor_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Author)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthorServiceServer).CreateAuthor(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/publication.management.author.AuthorService/CreateAuthor",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthorServiceServer).CreateAuthor(ctx, req.(*Author))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthorService_GetAuthor_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Author)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthorServiceServer).GetAuthor(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/publication.management.author.AuthorService/GetAuthor",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthorServiceServer).GetAuthor(ctx, req.(*Author))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthorService_GetAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthorServiceServer).GetAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/publication.management.author.AuthorService/GetAll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthorServiceServer).GetAll(ctx, req.(*GetAllRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthorService_ValidateToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Token)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthorServiceServer).ValidateToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/publication.management.author.AuthorService/ValidateToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthorServiceServer).ValidateToken(ctx, req.(*Token))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthorService_InvalidateToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Author)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthorServiceServer).InvalidateToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/publication.management.author.AuthorService/InvalidateToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthorServiceServer).InvalidateToken(ctx, req.(*Author))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthorService_Authenticate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Author)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthorServiceServer).Authenticate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/publication.management.author.AuthorService/Authenticate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthorServiceServer).Authenticate(ctx, req.(*Author))
	}
	return interceptor(ctx, in, info, handler)
}

var _AuthorService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "publication.management.author.AuthorService",
	HandlerType: (*AuthorServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateAuthor",
			Handler:    _AuthorService_CreateAuthor_Handler,
		},
		{
			MethodName: "GetAuthor",
			Handler:    _AuthorService_GetAuthor_Handler,
		},
		{
			MethodName: "GetAll",
			Handler:    _AuthorService_GetAll_Handler,
		},
		{
			MethodName: "ValidateToken",
			Handler:    _AuthorService_ValidateToken_Handler,
		},
		{
			MethodName: "InvalidateToken",
			Handler:    _AuthorService_InvalidateToken_Handler,
		},
		{
			MethodName: "Authenticate",
			Handler:    _AuthorService_Authenticate_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/author.proto",
}

func init() { proto.RegisterFile("proto/author.proto", fileDescriptor_author_a6d61f4ff1ae4ce3) }

var fileDescriptor_author_a6d61f4ff1ae4ce3 = []byte{
	// 480 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x54, 0xcf, 0x8a, 0xd4, 0x4e,
	0x10, 0xde, 0xf9, 0x93, 0x4c, 0xa6, 0x66, 0xe7, 0xb7, 0x50, 0xfc, 0x0e, 0x61, 0x64, 0x61, 0x08,
	0x8a, 0x7b, 0x90, 0x08, 0xe3, 0x4d, 0x5c, 0x64, 0x91, 0x45, 0xbc, 0x78, 0x88, 0xe2, 0x6d, 0x91,
	0xde, 0xa4, 0x74, 0x83, 0x49, 0x3a, 0xdb, 0xdd, 0x33, 0xb2, 0x2f, 0xe3, 0x33, 0xf9, 0x08, 0x3e,
	0x8a, 0x74, 0x75, 0x1a, 0x67, 0x2e, 0x26, 0x73, 0xf0, 0xd6, 0x5f, 0x7d, 0xfd, 0x75, 0x55, 0x7d,
	0x55, 0x09, 0x60, 0xab, 0xa4, 0x91, 0xcf, 0xc5, 0xd6, 0xdc, 0x49, 0x95, 0x32, 0xc0, 0xf3, 0x76,
	0x7b, 0x5b, 0x95, 0xb9, 0x30, 0xa5, 0x6c, 0xd2, 0x5a, 0x34, 0xe2, 0x2b, 0xd5, 0xd4, 0x98, 0xd4,
	0x5d, 0x4a, 0x7e, 0x8e, 0x20, 0xbc, 0xe2, 0x23, 0xfe, 0x07, 0xe3, 0xb2, 0x88, 0x47, 0xeb, 0xd1,
	0xc5, 0x3c, 0x1b, 0x97, 0x05, 0x9e, 0x03, 0x7c, 0x29, 0x95, 0x36, 0x9f, 0x1b, 0x51, 0x53, 0x3c,
	0xe6, 0xf8, 0x9c, 0x23, 0xef, 0x45, 0x4d, 0xf8, 0x08, 0xe6, 0x95, 0xf0, 0xec, 0x84, 0xd9, 0xc8,
	0x06, 0x98, 0x8c, 0x61, 0x26, 0x8a, 0x42, 0x91, 0xd6, 0xf1, 0x94, 0x29, 0x0f, 0x2d, 0x93, 0xcb,
	0x6d, 0x63, 0xd4, 0x43, 0x1c, 0x38, 0xa6, 0x83, 0xf8, 0x3f, 0x04, 0x54, 0x8b, 0xb2, 0x8a, 0x43,
	0x8e, 0x3b, 0x80, 0x2b, 0x88, 0x5a, 0xa1, 0xf5, 0x77, 0xa9, 0x8a, 0x78, 0xe6, 0xb2, 0x78, 0x6c,
	0x15, 0x46, 0x7e, 0xa3, 0x26, 0x8e, 0x9c, 0x82, 0x41, 0x72, 0x0f, 0xc1, 0x47, 0x7b, 0xf8, 0x43,
	0x8f, 0xf6, 0x68, 0x1b, 0xdd, 0x89, 0xaa, 0x2c, 0xb8, 0xa3, 0x28, 0x73, 0x00, 0x5f, 0x41, 0x48,
	0x4a, 0x49, 0xa5, 0xe3, 0xc9, 0x7a, 0x72, 0xb1, 0xd8, 0x3c, 0x4e, 0xff, 0xea, 0x5b, 0x7a, 0x6d,
	0x2f, 0x67, 0x9d, 0x26, 0x39, 0x83, 0xe5, 0x75, 0xdd, 0x9a, 0x87, 0x8c, 0x74, 0x2b, 0x1b, 0x4d,
	0x36, 0xf0, 0x96, 0xcc, 0x55, 0x55, 0x65, 0x74, 0xbf, 0x25, 0x6d, 0x92, 0x1f, 0x63, 0x88, 0x3c,
	0xcb, 0x1e, 0x28, 0x12, 0x86, 0x9c, 0xdd, 0x51, 0xe6, 0x21, 0x5e, 0x42, 0xe8, 0x12, 0x70, 0x75,
	0x8b, 0xcd, 0x93, 0x9e, 0x32, 0xdc, 0xe8, 0xb2, 0x4e, 0x84, 0xaf, 0x61, 0xe6, 0x4e, 0xbe, 0x8d,
	0x81, 0x7a, 0xaf, 0xda, 0xb3, 0x61, 0x7a, 0xbc, 0x0d, 0xf8, 0xd2, 0x1b, 0x1e, 0x70, 0xf1, 0x7d,
	0x62, 0x9e, 0x92, 0x9f, 0xda, 0x25, 0x04, 0xfc, 0x18, 0x22, 0x4c, 0x73, 0x59, 0x10, 0x3b, 0x13,
	0x64, 0x7c, 0xc6, 0x35, 0x2c, 0x0a, 0xd2, 0xb9, 0x2a, 0x5b, 0xfb, 0x54, 0xb7, 0x8b, 0xfb, 0xa1,
	0xcd, 0xaf, 0x29, 0x2c, 0x5d, 0x33, 0x1f, 0x48, 0xed, 0xca, 0x9c, 0x90, 0xe0, 0xf4, 0x0d, 0xbb,
	0xda, 0xad, 0xf7, 0x30, 0x2b, 0x56, 0xcf, 0xfa, 0x3a, 0x3e, 0x98, 0xf3, 0x09, 0xde, 0xc0, 0xdc,
	0x4e, 0xfa, 0xa8, 0x1c, 0x4f, 0x7b, 0xae, 0xed, 0x3d, 0x2f, 0x20, 0x74, 0x8b, 0x84, 0x7d, 0x85,
	0x1d, 0xec, 0xdb, 0x31, 0x29, 0x6e, 0x60, 0xf9, 0xc9, 0x7e, 0x03, 0xc2, 0x90, 0xfb, 0x6e, 0x06,
	0xcd, 0x6d, 0x35, 0xe8, 0x56, 0x72, 0x82, 0x77, 0x70, 0xf6, 0xae, 0xd9, 0x1d, 0x24, 0xf8, 0x67,
	0xa3, 0x38, 0xb5, 0x4a, 0x6a, 0x8c, 0xd5, 0xd0, 0xd0, 0x34, 0x03, 0x1b, 0xb9, 0x0d, 0xf9, 0x87,
	0xfa, 0xe2, 0x77, 0x00, 0x00, 0x00, 0xff, 0xff, 0x30, 0xa5, 0x7a, 0x19, 0x66, 0x05, 0x00, 0x00,
}
